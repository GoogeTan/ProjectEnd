buildscript {
    ext.kotlin_version = '1.4.30-M1'
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        // Make sure this version matches the one included in Kotlin for Forge
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'

version = '0.1B'
group = 'phoenix'
archivesBaseName = 'phoenix'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // Change to your preferred mappings
    mappings channel: 'snapshot', version: '20200916-1.16.2'
    // Add your AccessTransformer
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven { // Мавен, который поддерживает JEI.
        name = "Progwml6 maven"
        url = "http://dvs1.progwml6.com/files/maven"
    }
    maven { // Мавен, который поддерживает JEI, для резерва.
        name = "ModMaven"
        url = "modmaven.k-4u.nl"
    }
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    jcenter()
    maven {
        name = 'sponge'
        url = 'http://repo.spongepowered.org/maven'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.4-35.1.29'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    fg.deobf(implementation('thedarkcolour:kotlinforforge:1.6.2'))
    compileOnly "org.spongepowered:mixin:${mixin_version}-SNAPSHOT"
    runtimeOnly "org.spongepowered:mixin:${mixin_version}-SNAPSHOT"
    compileOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}:${jei_version}")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        languageVersion = '1.4'
        apiVersion = '1.4'
    }
}

// Optional (include assets and data from 'generated' folder)
sourceSets.main.resources {
    srcDirs 'src/generated/resources/'
}

jar {
    manifest {
        attributes([
                "Specification-Title": "examplemod",
                "Specification-Vendor": "examplemodsareus",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"examplemodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

sourceSets {
    main {
        ext.refMap = 'mixins.phoenix.refmap.json'
    }
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'MixinConfigs': 'mixins.phoenix.json', // Файлы наших миксинов
            'FMLCorePluginContainsFMLMod': 'true',         // Говорим, что наш джарник еще и мод
            'ForceLoadAsMod': 'true',                      // Точно точно мод
    )
}